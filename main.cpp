#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <iostream>
#include "lex.yy.h"
#include "test.tab.h"
#include "functions.h"
#include <readline/readline.h>
#include <readline/history.h>
#include <filesystem>


//extern int yyparse();     // Function generated by Bison
//extern FILE *yyin;        // Input file pointer for Bison
//extern int parse_string(const char* in); // Declare the function from parse.y

extern std::vector<Command> pipe_cmds;



int main(void) {
    char *input = nullptr;


    while (1) {

        input = readline((std::filesystem::current_path() / "$ ").c_str());
        if (input && *input) {
            add_history(input); // Add to history if not empty
        }

//        printf("$ ");
        yy_scan_string(input);
        yyparse();
        print_cmds();
        pipe_cmds.clear();
        free(input); // Free the allocated memory

// Execute commands based on 'input' here
// Remember to fork a new process and use execve

    }


    free(input);
    return (0);
}